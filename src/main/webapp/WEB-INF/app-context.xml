<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"	
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
   http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
	">


	<!-- MVC 어노테이션 기반의 컨트롤러 활성화 -->
	<mvc:annotation-driven validator="validator" />
	
	<!-- 컨트롤러가 위치한 패키지를 스캔 -->
	<context:component-scan base-package="kr.ac.kku.cs.wp" />
	

	<!-- MVC 어노테이션 기반의 컨트롤러 활성화 -->
	<mvc:annotation-driven />


 	<!-- DataSource 설정 -->
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/kwanho10?allowPublicKeyRetrieval=true&amp;useSSL=false&amp;serverTimezone=UTC" />
        <property name="username" value="kwanho10" />
        <property name="password" value="kwanho10" />
    </bean> 
    
    
	<!-- JPA EntityManager 설정 -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="kr.ac.kku.cs.wp.kwanho10" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
        </property>
        <property name="jpaProperties">
            <props>
                <!-- 테이블 자동 생성 설정 -->
                <prop key="hibernate.hbm2ddl.auto">update</prop> <!-- 테이블 자동 업데이트 -->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL8Dialect</prop> <!-- MySQL 8용 Hibernate Dialect -->
                <prop key="hibernate.show_sql">true</prop> <!-- SQL 쿼리 출력 -->
                <prop key="hibernate.format_sql">true</prop> <!-- SQL 쿼리 포맷팅 -->
            </props>
        </property>
    </bean>
    
    
        <!-- 트랜잭션 매니저 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager" />
    
    
    	<!-- 뷰 리졸버 설정 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	


	<!-- 정적 자원 핸들링 (CSS, JavaScript 등) -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
    
    
     <!-- JPA Repository 설정 -->
    <jpa:repositories base-package="kr.ac.kku.cs.wp.kwanho10.*" />
    
    
    <!-- AOP 설정 -->
    <aop:aspectj-autoproxy />
    
     	
     <!-- spring test 에서 validation 주입하기 위해 필요함 -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="messageInterpolator">
            <bean class="org.hibernate.validator.messageinterpolation.ParameterMessageInterpolator" />
        </property>
    </bean>
	    
	    
	
    
		<!-- MultipartResolver 설정 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver" />
	

		<bean id="fileUploadDirectory" class="java.io.File">
		    <constructor-arg value="/absolute/path/to/uploads" />
		</bean>


		<!-- 정적 리소스 매핑 -->
	<mvc:resources mapping="/uploads/**" location="classpath:/static/uploads/" />





</beans>

